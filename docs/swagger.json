{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/admin/metrics/top-domains": {
            "get": {
                "description": "Retrieve top visited domains for a specific user for all time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/metrics"
                ],
                "summary": "Get top domains for user (all time)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of top domains to return (max 50, default 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional session ID filter",
                        "name": "session_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wrapper.SuccessWrapper"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/behaviors": {
            "get": {
                "description": "Get user behavior events with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/behaviors"
                ],
                "summary": "Get user behaviors",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Event type",
                        "name": "eventType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "URL (partial match)",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339 format)",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339 format)",
                        "name": "endTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Time period filter: 'today', 'week', 'month', 'year'",
                        "name": "period",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (starts from 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 1000)",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (deprecated, use per_page)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (deprecated, use page)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/entity.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.UserBehavior"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a single user behavior event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/inayla/behaviors"
                ],
                "summary": "Create user behavior event",
                "parameters": [
                    {
                        "description": "Behavior data",
                        "name": "behavior",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateUserBehaviorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.UserBehavior"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/behaviors/batch": {
            "post": {
                "description": "Create multiple user behavior events in one request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/inayla/behaviors"
                ],
                "summary": "Batch create user behavior events",
                "parameters": [
                    {
                        "description": "Behaviors data",
                        "name": "behaviors",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.BatchCreateUserBehaviorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/behaviors/periods": {
            "get": {
                "description": "Get list of available time period filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/behaviors"
                ],
                "summary": "Get available time periods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.PeriodInfo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/behaviors/sessions/{sessionId}": {
            "get": {
                "description": "Get summary information about a specific session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/behaviors"
                ],
                "summary": "Get session summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.SessionSummary"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/behaviors/stats": {
            "get": {
                "description": "Get statistics about user behaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/behaviors"
                ],
                "summary": "Get behavior statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "sessionId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Event type",
                        "name": "eventType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "URL (partial match)",
                        "name": "url",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339 format)",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339 format)",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.UserBehaviorStats"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/behaviors/user-events": {
            "get": {
                "description": "Get statistics about user behaviors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/behaviors"
                ],
                "summary": "Get behavior statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339 format)",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339 format)",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.UserEventsCountResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/behaviors/users/{userId}/sessions": {
            "get": {
                "description": "Get all sessions for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/behaviors"
                ],
                "summary": "Get user sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 50, max: 200)",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (deprecated, use per_page)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (deprecated, use page)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.SessionSummary"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/entity.PaginationInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/behaviors/{id}": {
            "get": {
                "description": "Get a specific user behavior event by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/behaviors"
                ],
                "summary": "Get behavior by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Behavior ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.UserBehavior"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific user behavior event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/behaviors"
                ],
                "summary": "Delete behavior",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Behavior ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/extension/username/{username}": {
            "get": {
                "description": "Get a specific extension user by their username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/extension"
                ],
                "summary": "Get extension user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.ExtensionUserPublic"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/extension/users": {
            "get": {
                "description": "Get list of extension users with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/extension"
                ],
                "summary": "Get all extension users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by active status",
                        "name": "isActive",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (starts from 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 200)",
                        "name": "per_page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit (deprecated, use per_page)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset (deprecated, use page)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.PaginatedResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/entity.ExtensionUserPublic"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/extension/users/auth": {
            "post": {
                "description": "Validate extension user API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/inayla/extension"
                ],
                "summary": "Validate API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.ExtensionUserPublic"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/extension/users/generate": {
            "post": {
                "description": "Create a new extension user with API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/extension"
                ],
                "summary": "Create extension user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CreateExtensionUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.ExtensionUser"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/extension/users/stats": {
            "get": {
                "description": "Get statistics about extension users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/extension"
                ],
                "summary": "Get extension users statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.ExtensionUserStats"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/extension/users/{id}": {
            "get": {
                "description": "Get a specific extension user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/extension"
                ],
                "summary": "Get extension user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.ExtensionUserPublic"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            },
            "put": {
                "description": "Update extension user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/extension"
                ],
                "summary": "Update extension user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UpdateExtensionUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.ExtensionUserPublic"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an extension user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/extension"
                ],
                "summary": "Delete extension user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/extension/users/{id}/regenerate-key": {
            "post": {
                "description": "Regenerate API key for extension user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/extension"
                ],
                "summary": "Regenerate API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/entity.RegenerateAPIKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/metrics/engaged-time": {
            "get": {
                "description": "Calculate engaged time (active minutes) and tracked time with engagement rate for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/metrics"
                ],
                "summary": "Get engaged time metric with tracked time data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339 format)",
                        "name": "start_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339 format)",
                        "name": "end_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Specific session ID",
                        "name": "session_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.EngagedTimeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/metrics/tracked-time": {
            "get": {
                "description": "Calculate tracked time (sum of session durations) for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/metrics"
                ],
                "summary": "Get tracked time metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339 format)",
                        "name": "start_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339 format)",
                        "name": "end_time",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Specific session ID",
                        "name": "session_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TrackedTimeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/metrics/tracked-time-total": {
            "get": {
                "description": "Calculate total time from first to last event for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/api/v1/admin/metrics"
                ],
                "summary": "Get total tracked time metric",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Specific session ID",
                        "name": "session_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TrackedTimeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/users/auth": {
            "post": {
                "description": "Create a new user or authenticate an existing user with password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create or authenticate user with password",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserWithPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "description": "Logout user by clearing authentication cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.SuccessWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "description": "Get user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/wrapper.ResponseWrapper"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/wrapper.ErrorWrapper"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.BatchCreateUserBehaviorRequest": {
            "type": "object",
            "required": [
                "events"
            ],
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.CreateUserBehaviorRequest"
                    }
                }
            }
        },
        "entity.CreateExtensionUserRequest": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "entity.CreateUserBehaviorRequest": {
            "type": "object",
            "required": [
                "sessionId",
                "ts",
                "type",
                "url"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                },
                "ts": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "entity.DeepWorkData": {
            "type": "object",
            "properties": {
                "average_minutes": {
                    "description": "средняя длительность сессии",
                    "type": "number"
                },
                "deep_work_rate": {
                    "description": "% от tracked time",
                    "type": "number"
                },
                "longest_minutes": {
                    "description": "самая длинная сессия",
                    "type": "number"
                },
                "sessions_count": {
                    "description": "количество deep work сессий",
                    "type": "integer"
                },
                "top_domains": {
                    "description": "топ доменов для deep work",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DeepWorkDomain"
                    }
                },
                "total_hours": {
                    "description": "общее время в часах",
                    "type": "number"
                },
                "total_minutes": {
                    "description": "общее время в deep work",
                    "type": "number"
                }
            }
        },
        "entity.DeepWorkDomain": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "minutes": {
                    "type": "number"
                },
                "sessions": {
                    "type": "integer"
                }
            }
        },
        "entity.DetailedAnalysis": {
            "type": "object",
            "properties": {
                "behavior_insights": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain_breakdown": {
                    "$ref": "#/definitions/entity.DomainBreakdown"
                },
                "key_findings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "productivity_score": {
                    "$ref": "#/definitions/entity.ProductivityScore"
                }
            }
        },
        "entity.DomainBreakdown": {
            "type": "object",
            "properties": {
                "communication": {
                    "description": "Gmail, Telegram, etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "development": {
                    "description": "localhost, CodeSandbox, etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "distractions": {
                    "description": "YouTube, social, etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "research": {
                    "description": "Stack Overflow, docs, etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "work_tools": {
                    "description": "GitHub, Jira, etc.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity.EngagedTimeMetric": {
            "type": "object",
            "properties": {
                "active_events": {
                    "type": "integer"
                },
                "active_hours": {
                    "type": "number"
                },
                "active_minutes": {
                    "type": "integer"
                },
                "analysis": {
                    "$ref": "#/definitions/entity.DetailedAnalysis"
                },
                "deep_work": {
                    "$ref": "#/definitions/entity.DeepWorkData"
                },
                "domains_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "end_time": {
                    "type": "string"
                },
                "engagement_rate": {
                    "type": "number"
                },
                "focus_insight": {
                    "type": "string"
                },
                "focus_level": {
                    "description": "\"high\", \"medium\", \"low\"",
                    "type": "string"
                },
                "hourly_breakdown": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.HourlyData"
                    }
                },
                "period": {
                    "type": "string"
                },
                "recommendations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sessions": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "tracked_hours": {
                    "type": "number"
                },
                "tracked_minutes": {
                    "type": "number"
                },
                "unique_domains_count": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "work_pattern": {
                    "type": "string"
                }
            }
        },
        "entity.EngagedTimeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.EngagedTimeMetric"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "entity.EventTypes": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "event": {
                    "type": "string"
                }
            }
        },
        "entity.ExtensionUser": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastUsedAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.ExtensionUserPublic": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "lastUsedAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.ExtensionUserStats": {
            "type": "object",
            "properties": {
                "activeUsers": {
                    "type": "integer"
                },
                "inactiveUsers": {
                    "type": "integer"
                },
                "totalUsers": {
                    "type": "integer"
                },
                "usersUsedThisWeek": {
                    "type": "integer"
                },
                "usersUsedToday": {
                    "type": "integer"
                }
            }
        },
        "entity.HourlyData": {
            "type": "object",
            "properties": {
                "date": {
                    "description": "\"2025-07-10\"",
                    "type": "string"
                },
                "engaged_mins": {
                    "description": "активные минуты в этом часе",
                    "type": "integer"
                },
                "events": {
                    "description": "количество событий",
                    "type": "integer"
                },
                "hour": {
                    "description": "час (0-23)",
                    "type": "integer"
                },
                "idle_mins": {
                    "description": "неактивные минуты в этом часе",
                    "type": "integer"
                },
                "productivity": {
                    "description": "engaged_mins / total_mins * 100",
                    "type": "number"
                },
                "sessions": {
                    "description": "количество сессий",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "\"8:00 AM\", \"9:00 AM\"",
                    "type": "string"
                },
                "total_mins": {
                    "description": "общее время в этом часе",
                    "type": "integer"
                }
            }
        },
        "entity.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "pagination": {
                    "$ref": "#/definitions/entity.PaginationInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "entity.PaginationInfo": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "entity.PeriodInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "entity.ProductivityScore": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "work/life domains",
                    "type": "integer"
                },
                "efficiency": {
                    "description": "engagement rate",
                    "type": "integer"
                },
                "explanation": {
                    "description": "краткое объяснение счета",
                    "type": "string"
                },
                "focus": {
                    "description": "на основе deep work",
                    "type": "integer"
                },
                "overall": {
                    "description": "0-100",
                    "type": "integer"
                }
            }
        },
        "entity.RegenerateAPIKeyResponse": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "entity.SessionSummary": {
            "type": "object",
            "properties": {
                "duration": {
                    "description": "в секундах",
                    "type": "number"
                },
                "endTime": {
                    "type": "string"
                },
                "eventsCount": {
                    "type": "integer"
                },
                "sessionId": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "entity.TrackedTimeMetric": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "sessions": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "total_hours": {
                    "type": "number"
                },
                "total_minutes": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity.TrackedTimeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/entity.TrackedTimeMetric"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "entity.URLStats": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.UpdateExtensionUserRequest": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "entity.UserBehavior": {
            "type": "object",
            "required": [
                "sessionId",
                "ts",
                "type",
                "url"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                },
                "ts": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "entity.UserBehaviorStats": {
            "type": "object",
            "properties": {
                "eventsByType": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "popularUrls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.URLStats"
                    }
                },
                "totalEvents": {
                    "type": "integer"
                },
                "uniqueSessions": {
                    "type": "integer"
                },
                "uniqueUsers": {
                    "type": "integer"
                }
            }
        },
        "entity.UserEventsCountResponse": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EventTypes"
                    }
                },
                "start_time": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "request.CreateUserWithPassword": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "wrapper.ErrorWrapper": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "wrapper.PaginatedResponseWrapper": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {
                    "$ref": "#/definitions/entity.PaginationInfo"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "wrapper.ResponseWrapper": {
            "type": "object",
            "properties": {
                "data": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "wrapper.SuccessWrapper": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}